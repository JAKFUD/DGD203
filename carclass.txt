using System;
using System.Collections.Generic;
using System.Linq;

class Car
{
    public string Make { get; set; }
    public string Model { get; set; }
    public double FuelEconomy { get; set; } // in miles per gallon (mpg)
    public double TopSpeed { get; set; } // in miles per hour (mph)
    public decimal Price { get; set; } // in dollars

    public Car(string make, string model, double fuelEconomy, double topSpeed, decimal price)
    {
        if (fuelEconomy <= 0)
            throw new ArgumentException("Fuel economy must be greater than zero.");
        if (topSpeed <= 0)
            throw new ArgumentException("Top speed must be greater than zero.");
        if (price < 0)
            throw new ArgumentException("Price cannot be negative.");

        Make = make;
        Model = model;
        FuelEconomy = fuelEconomy;
        TopSpeed = topSpeed;
        Price = price;
    }

    public override string ToString()
    {
        return $"{Make} {Model}: Fuel Economy = {FuelEconomy} mpg, Top Speed = {TopSpeed} mph, Price = ${Price}";
    }
}

class Program
{
    static void Main(string[] args)
    {
        List<Car> cars = new List<Car>
        {
            new Car("Toyota", "Camry", 28.0, 130, 24000),
            new Car("Honda", "Accord", 30.0, 125, 25000),
            new Car("Ford", "Mustang", 22.0, 155, 27000),
            new Car("Chevrolet", "Malibu", 29.0, 130, 23000),
            new Car("Nissan", "Altima", 27.0, 130, 24000),
            new Car("BMW", "3 Series", 26.0, 155, 41000),
            new Car("Audi", "A4", 25.0, 150, 39000),
            new Car("Mercedes-Benz", "C-Class", 24.0, 149, 42000),
            new Car("Hyundai", "Sonata", 32.0, 130, 23000),
            new Car("Kia", "Optima", 29.0, 130, 22000)
        };

        Console.WriteLine("How would you like to list the cars?");
        Console.WriteLine("1. By Fuel Economy (High to Low)");
        Console.WriteLine("2. By Top Speed (High to Low)");
        Console.WriteLine("3. By Price (Low to High)");
        Console.WriteLine("Enter your choice (1-3):");

        string choice = Console.ReadLine();

        switch (choice)
        {
            case "1":
                var sortedByFuelEconomy = cars.OrderByDescending(car => car.FuelEconomy);
                Console.WriteLine("Cars sorted by Fuel Economy (High to Low):");
                foreach (var car in sortedByFuelEconomy)
                {
                    Console.WriteLine(car);
                }
                break;

            case "2":
                var sortedByTopSpeed = cars.OrderByDescending(car => car.TopSpeed);
                Console.WriteLine("Cars sorted by Top Speed (High to Low):");
                foreach (var car in sortedByTopSpeed)
                {
                    Console.WriteLine(car);
                }
                break;

            case "3":
                var sortedByPrice = cars.OrderBy(car => car.Price);
                Console.WriteLine("Cars sorted by Price (Low to High):");
                foreach (var car in sortedByPrice)
                {
                    Console.WriteLine(car);
                }
                break;

            default:
                Console.WriteLine("Invalid choice. Please enter a number between 1 and 3.");
                break;
        }
    }
}
